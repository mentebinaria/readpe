# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -I../include -I../lib/libpe/include -I../lib
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CC) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../build/Debug
TARGET = $(TARGETDIR)/readpe
OBJDIR = obj/Debug
DEFINES += -D_GNU_SOURCE -DSHAREDIR=\"\" -DPLUGINSDIR=\"pev/plugins\" -DDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -flto -g -Wall -Wextra -Wpedantic -Wshadow -Wundef -Wdouble-promotion -Wformat=2 -Wformat-security -Wconversion
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -flto -g -Wall -Wextra -Wpedantic -Wshadow -Wundef -Wdouble-promotion -Wformat=2 -Wformat-security -Wconversion
LIBS += ../build/Debug/libpe.a ../build/Debug/libudis86.a -lcrypto -lm
LDDEPS += ../build/Debug/libpe.a ../build/Debug/libudis86.a
ALL_LDFLAGS += $(LDFLAGS) -flto

else ifeq ($(config),release)
TARGETDIR = ../build/Release
TARGET = $(TARGETDIR)/readpe
OBJDIR = obj/Release
DEFINES += -D_GNU_SOURCE -DSHAREDIR=\"\" -DPLUGINSDIR=\"pev/plugins\" -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -flto -O3 -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -flto -O3 -Wall -Wextra
LIBS += ../build/Release/libpe.so ../build/Release/libudis86.a -lcrypto -lm
LDDEPS += ../build/Release/libpe.so ../build/Release/libudis86.a
ALL_LDFLAGS += $(LDFLAGS) -Wl,-rpath,'$$ORIGIN' -flto -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/config.o
GENERATED += $(OBJDIR)/dylib.o
GENERATED += $(OBJDIR)/main.o
GENERATED += $(OBJDIR)/malloc_s.o
GENERATED += $(OBJDIR)/ofs2rva.o
GENERATED += $(OBJDIR)/output.o
GENERATED += $(OBJDIR)/output_plugin.o
GENERATED += $(OBJDIR)/pedis.o
GENERATED += $(OBJDIR)/pehash.o
GENERATED += $(OBJDIR)/peldd.o
GENERATED += $(OBJDIR)/pepack.o
GENERATED += $(OBJDIR)/peres.o
GENERATED += $(OBJDIR)/pescan.o
GENERATED += $(OBJDIR)/pesec.o
GENERATED += $(OBJDIR)/pestr.o
GENERATED += $(OBJDIR)/pev_api.o
GENERATED += $(OBJDIR)/plugins.o
GENERATED += $(OBJDIR)/readpe.o
GENERATED += $(OBJDIR)/rva2ofs.o
GENERATED += $(OBJDIR)/strlcat.o
OBJECTS += $(OBJDIR)/config.o
OBJECTS += $(OBJDIR)/dylib.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/malloc_s.o
OBJECTS += $(OBJDIR)/ofs2rva.o
OBJECTS += $(OBJDIR)/output.o
OBJECTS += $(OBJDIR)/output_plugin.o
OBJECTS += $(OBJDIR)/pedis.o
OBJECTS += $(OBJDIR)/pehash.o
OBJECTS += $(OBJDIR)/peldd.o
OBJECTS += $(OBJDIR)/pepack.o
OBJECTS += $(OBJDIR)/peres.o
OBJECTS += $(OBJDIR)/pescan.o
OBJECTS += $(OBJDIR)/pesec.o
OBJECTS += $(OBJDIR)/pestr.o
OBJECTS += $(OBJDIR)/pev_api.o
OBJECTS += $(OBJDIR)/plugins.o
OBJECTS += $(OBJDIR)/readpe.o
OBJECTS += $(OBJDIR)/rva2ofs.o
OBJECTS += $(OBJDIR)/strlcat.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking readpe
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning readpe
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CC) -x c-header $(ALL_CFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/strlcat.o: compat/strlcat.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/config.o: config.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dylib.o: dylib.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: main.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/malloc_s.o: malloc_s.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ofs2rva.o: ofs2rva.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/output.o: output.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/output_plugin.o: output_plugin.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pedis.o: pedis.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pehash.o: pehash.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/peldd.o: peldd.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pepack.o: pepack.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/peres.o: peres.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pescan.o: pescan.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pesec.o: pesec.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pestr.o: pestr.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pev_api.o: pev_api.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/plugins.o: plugins.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/readpe.o: readpe.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rva2ofs.o: rva2ofs.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif