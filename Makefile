# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  pe_config = debug
  udis86_config = debug
  readpe_config = debug

else ifeq ($(config),release)
  pe_config = release
  udis86_config = release
  readpe_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := pe udis86 readpe

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

pe:
ifneq (,$(pe_config))
	@echo "==== Building pe ($(pe_config)) ===="
	@${MAKE} --no-print-directory -C lib/libpe -f Makefile config=$(pe_config)
endif

udis86:
ifneq (,$(udis86_config))
	@echo "==== Building udis86 ($(udis86_config)) ===="
	@${MAKE} --no-print-directory -C lib/libudis86/libudis86 -f Makefile config=$(udis86_config)
endif

readpe: pe udis86
ifneq (,$(readpe_config))
	@echo "==== Building readpe ($(readpe_config)) ===="
	@${MAKE} --no-print-directory -C src -f Makefile config=$(readpe_config)
endif

clean:
	@${MAKE} --no-print-directory -C lib/libpe -f Makefile clean
	@${MAKE} --no-print-directory -C lib/libudis86/libudis86 -f Makefile clean
	@${MAKE} --no-print-directory -C src -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   pe"
	@echo "   udis86"
	@echo "   readpe"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"